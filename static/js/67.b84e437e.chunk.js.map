{"version":3,"file":"static/js/67.b84e437e.chunk.js","mappings":"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","sources":["components/foundations/button/Button.tsx","Application/Settings/Settings.tsx","contexts/useConfig.ts","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/structure/viewChildren/displayGrid/DisplayGrid.tsx","webpack://jaze/./src/components/structure/viewChildren/displayTable/DisplayTable.module.css?215c","components/structure/viewChildren/displayTable/DisplayTable.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { ButtonProps } from \"../../../types/foundationTypes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      onClick,\n      children,\n      type = \"button\",\n      className,\n      disabled = false,\n      dataType,\n      icon,\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n            className={`${className} ${disabled ? disabled : \"\"}`}\n        onClick={onClick}\n        disabled={disabled}\n        datatype={dataType}\n      >\n        {icon && (<FontAwesomeIcon className=\"btnIcon\" icon={icon as IconProp} />\n        )}\n        {children && <span>{children}</span>}\n      </button>\n    );\n  },\n);\n\nexport default Button;\n","import React, { useEffect, useMemo } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faKey,\n    faPalette,\n    faPenNib,\n    faCoffee,\n    faBug,\n    faUser,\n    faBrush,\n    faLock,\n    faLockOpen,\n    faCodeMerge,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { ActivityConstructorProps } from \"../../types/structureTypes\";\nimport { useViewTitle } from \"../../contexts/ViewTitleContexts\";\nimport { useConfig } from \"../../contexts/useConfig\";\nimport { useLocalStorage } from \"../../hooks/utils/useLocalStorage\";\nimport {\n    faGithub,\n    faLastfmSquare,\n    faPaypal,\n    faSpotify,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport Button from \"../../components/foundations/button/Button\";\nimport JaZeAuth from \"../../hooks/authentication/jazeAuth\";\nimport DisplayTable from \"../../components/structure/viewChildren/displayTable/DisplayTable\";\nimport DisplayGrid from \"../../components/structure/viewChildren/displayGrid/DisplayGrid\";\n\nconst Settings: React.FC<ActivityConstructorProps> = () => {\n    const [lastUser, spotUser] = JaZeAuth();\n    const { getItem } = useLocalStorage();\n    const { toggleDarkMode, toggleDecryptionMode } = useConfig();\n    const { setTitle } = useViewTitle();\n\n    useEffect(() => {\n        setTitle(\"Settings\");\n    }, [setTitle]);\n\n    const settingsOptions = useMemo(\n        () => [\n            {\n                displayLabel: \"Last.FM\",\n                action: !lastUser.isFMAuthenticated()\n                    ? lastUser.startAuthFM\n                    : lastUser.logFMOut,\n                actionLabel: !lastUser.isFMAuthenticated() ? \"Log In\" : \"Log Out\",\n                icon: faLastfmSquare,\n                secondaryIcon: faUser,\n            },\n            {\n                displayLabel: \"Spotify\",\n                action: !spotUser.isSpotifyLoggedIn()\n                    ? spotUser.startAuthSpotify\n                    : spotUser.logSpotifyOut,\n                actionLabel: !spotUser.isSpotifyLoggedIn() ? \"Log In\" : \"Log Out\",\n                icon: faSpotify,\n                secondaryIcon: faUser,\n            },\n            {\n                displayLabel: \"Encryption\",\n                action: toggleDecryptionMode,\n                actionLabel: getItem(\"isDecrypted\") ? \"Enable\" : \"Disable\",\n                icon: faKey,\n                secondaryIcon: getItem(\"isDecrypted\") ? faLock : faLockOpen,\n            },\n            {\n                displayLabel: \"Change Theme\",\n                action: toggleDarkMode,\n                actionLabel: getItem(\"isDarkMode\") ? \"Dark Mode\" : \"Light Mode\",\n                icon: faPalette,\n                secondaryIcon: faBrush,\n            },\n        ],\n        [\n            lastUser.isFMAuthenticated(),\n            lastUser.startAuthFM,\n            lastUser.logFMOut,\n            spotUser.isSpotifyLoggedIn(),\n            spotUser.startAuthSpotify,\n            spotUser.logSpotifyOut,\n            toggleDecryptionMode,\n            getItem(\"isDecrypted\"),\n            toggleDarkMode,\n            getItem(\"isDarkMode\"),\n        ],\n    );\n\n    const additionalSettings = [\n        {\n            displayLabel: \"Author Name\",\n            action: null,\n            actionLabel: \"J Kang\",\n            icon: faPenNib,\n            secondaryIcon: null,\n        },\n        {\n            displayLabel: \"Current Version\",\n            action: null,\n            actionLabel: `JaZe ${process.env.REACT_APP_VER}`,\n            icon: faCodeMerge,\n            secondaryIcon: null,\n        },\n        {\n            displayLabel: \"GitHub\",\n            action: () =>\n                (window.location.href = \"https://github.com/jaykang98/jaze\"),\n            actionLabel: \"Fix Bugs\",\n            icon: faGithub,\n            secondaryIcon: faBug,\n        },\n        {\n            displayLabel: \"PayPal\",\n            action: () =>\n            (window.location.href =\n                \"https://paypal.me/jklmnopea?country.x=US&locale.x=en_US\"),\n            actionLabel: \"Donate\",\n            icon: faPaypal,\n            secondaryIcon: faCoffee,\n        },\n    ];\n\n    const formatTableData = (options) =>\n        options.map((option) => [\n            <FontAwesomeIcon\n                key={`${option.displayLabel}-icon`}\n                icon={option.icon}\n                className=\"tableIcon\"\n            />,\n            <span key={`${option.displayLabel}-label`} style={{ fontSize: \"150%\" }}>\n                {option.displayLabel}\n            </span>,\n            option.action ? (\n                <Button\n                    key={`${option.displayLabel}-button`}\n                    onClick={option.action}\n                    icon={option.secondaryIcon}\n                >\n                    {option.actionLabel}\n                </Button>\n            ) : (\n                <span key={`${option.displayLabel}-label`} style={{ fontSize: \"150%\" }}>\n                    {option.actionLabel}\n                </span>\n            ),\n        ]);\n\n    return (\n        <DisplayGrid\n            title=\"Settings\"\n            viewFrames={[\n                {\n                    content: (\n                        <>\n                            <p>\n                                Adjust your preferences for a personalized experience. JaZe\n                                offers a number of customization options, including Last.FM\n                                login, disabling local encryption (faster, but less secure),\n                                clearing all saved information, and dark mode. Enjoy!\n                            </p>\n                            <ul>\n                                <li>\n                                    Use the Last.FM Authentication Framework to view data about\n                                    your music\n                                </li>\n                                <li>\n                                    Store some of the data locally and securely to save on query\n                                    requests\n                                </li>\n                                <li>\n                                    View your top ten musicians, albums, and tracks of all time.\n                                    AND the number of scrobbles!\n                                </li>\n                                <li>Create a Last.FM account from the click of a button</li>\n                                <li>\n                                    Enable DEBUG_MODE to view more information and disable\n                                    encryption\n                                </li>\n                                <li>Quick links for quick actions!</li>\n                            </ul>\n                        </>\n                    ),\n                    viewWidth: 100,\n                },\n                {\n                    content: (\n                        <>\n                            <div className=\"titleContainer\">\n                                <h2>Customize</h2>\n                                <h1>JaZe</h1>\n                            </div>\n                            <div>\n                                <DisplayTable data={formatTableData(settingsOptions)} />\n                                <DisplayTable data={formatTableData(additionalSettings)} />\n                            </div>\n\n                        </>\n                    ),\n                    viewWidth: 100,\n                },\n            ]}\n        />\n    );\n};\n\nexport default Settings;\n","import { useCallback, useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../hooks/utils/useLocalStorage\";\n\nexport const useConfig = () => {\n  const { getItem, setItem } = useLocalStorage();\n  const [isDecrypted, setIsDecrypted] = useState(() =>\n    JSON.parse(getItem(\"isDecrypted\") || \"false\"),\n  );\n  const [isDarkMode, setIsDarkMode] = useState(() =>\n    JSON.parse(getItem(\"isDarkMode\") || \"false\"),\n  );\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [isDarkMode]);\n\n  const toggleDecryptionMode = useCallback(() => {\n    setIsDecrypted((prev) => {\n      const newValue = !prev;\n      setItem(\"isDecrypted\", String(newValue));\n      return newValue;\n    });\n  }, [setItem]);\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode((prev) => {\n      const newValue = !prev;\n      setItem(\"isDarkMode\", String(newValue));\n      return newValue;\n    });\n  }, [setItem]);\n\n  return {\n    isDarkMode,\n    toggleDarkMode,\n    isDecrypted,\n    toggleDecryptionMode,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__ZU2oo\",\"empty\":\"ViewFrame_empty__6Vyig\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__lYpQo\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  const isEmptyContent = React.Children.count(children) === 0;\n  const sectionClassName = isEmptyContent\n    ? styles.viewSectionEmpty\n    : styles.viewSection;\n\n  return (\n    <div className={sectionClassName} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst isEmptyContent = (children: React.ReactNode): boolean => {\n  const childrenArray = React.Children.toArray(children);\n  return (\n    childrenArray.length === 0 ||\n    childrenArray.every(\n      (child) =>\n        React.isValidElement(child) &&\n        child.type === React.Fragment &&\n        React.Children.count(child.props.children) === 0,\n    )\n  );\n};\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 100,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const [firstChild, secondChild] = React.Children.toArray(children).slice(\n    0,\n    2,\n  );\n  const isContentEmpty = isEmptyContent([firstChild, secondChild]);\n\n  const adjustSplitPercentage = () => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const minChildWidth = 0;\n      const maxChildWidth = 1800;\n      let newSplit =\n        (Math.max(\n          minChildWidth,\n          Math.min(maxChildWidth, containerWidth * (splitPercentage / 100)),\n        ) /\n          containerWidth) *\n        100;\n      setAdjustedSplit(newSplit);\n    }\n  };\n\n  useEffect(() => {\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n    return () => window.removeEventListener(\"resize\", adjustSplitPercentage);\n  }, [splitPercentage]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={classNames(styles.viewFrame, {\n        [styles.empty]: isContentEmpty,\n      })}\n    >\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {firstChild}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {secondChild}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport ViewFrame from \"../../viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\nimport Styles from \"./DisplayGrid.module.css\";\ninterface ViewFrameInfo {\n  content: React.ReactNode;\n  viewWidth?: number;\n}\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  title?: string;\n  viewFrames: ViewFrameInfo[];\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({ viewFrames }) => {\n  const totalSpecifiedWidth = viewFrames.reduce(\n    (acc, { viewWidth }) => acc + (viewWidth || 0),\n    0,\n  );\n  const unspecifiedFramesCount = viewFrames.filter(\n    ({ viewWidth }) => viewWidth === undefined,\n  ).length;\n  const remainingWidthPerFrame =\n    (100 - totalSpecifiedWidth) / unspecifiedFramesCount;\n\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {viewFrames.map((frame, index) => (\n          <ViewFrame\n            key={index}\n            splitPercentage={frame.viewWidth || remainingWidthPerFrame}\n          >\n            {frame.content}\n          </ViewFrame>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DisplayGrid;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DisplayTable_table__wz8iq\",\"cell\":\"DisplayTable_cell__FEVfS\"};","// File: DisplayTable.tsx\nimport React from \"react\";\nimport styles from \"./DisplayTable.module.css\";\n\ntype TableCell = string | JSX.Element;\n\ninterface TableProps {\n  data: TableCell[][];\n}\n\nconst DisplayTable: React.FC<TableProps> = ({ data }) => {\n  if (data.length === 0 || (data.length > 0 && data[0].length === 0)) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={`row-${rowIndex}`}>\n            {row.map((cell, cellIndex) => (\n              <td\n                key={`cell-${rowIndex}-${cellIndex}`}\n                className={`${styles.cell} ${cellIndex === 0 ? styles.boldText : \"\"}`}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayTable;\n"],"names":["forwardRef","_ref","ref","onClick","children","type","className","disabled","dataType","icon","_jsxs","concat","datatype","_jsx","FontAwesomeIcon","Settings","lastUser","spotUser","JaZeAuth","getItem","useLocalStorage","toggleDarkMode","toggleDecryptionMode","useConfig","setItem","isDecrypted","setIsDecrypted","useState","JSON","parse","isDarkMode","setIsDarkMode","useEffect","document","body","classList","add","remove","useCallback","prev","newValue","String","setTitle","useViewTitle","settingsOptions","useMemo","displayLabel","action","isFMAuthenticated","logFMOut","startAuthFM","actionLabel","faLastfmSquare","secondaryIcon","faUser","isSpotifyLoggedIn","logSpotifyOut","startAuthSpotify","faSpotify","faKey","faLock","faLockOpen","faPalette","faBrush","additionalSettings","faPenNib","process","faCodeMerge","window","location","href","faGithub","faBug","faPaypal","faCoffee","formatTableData","options","map","option","style","fontSize","Button","DisplayGrid","title","viewFrames","content","_Fragment","viewWidth","DisplayTable","data","sectionClassName","React","count","styles","viewSectionEmpty","viewSection","splitPercentage","containerRef","useRef","adjustedSplit","setAdjustedSplit","firstChild","secondChild","toArray","slice","isContentEmpty","childrenArray","length","every","child","props","isEmptyContent","adjustSplitPercentage","current","containerWidth","offsetWidth","minChildWidth","maxChildWidth","newSplit","Math","max","min","addEventListener","removeEventListener","classNames","ViewSection","width","remainingWidthPerFrame","reduce","acc","_ref2","filter","_ref3","undefined","display","flexDirection","frame","index","ViewFrame","table","row","rowIndex","cell","cellIndex","boldText"],"sourceRoot":""}