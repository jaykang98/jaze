{"version":3,"file":"static/js/28.bc071d02.chunk.js","mappings":"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","sources":["Application/LandingPage/LandingPage.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/structure/viewChildren/displayGrid/DisplayGrid.tsx","webpack://jaze/./src/components/structure/viewChildren/displayTable/DisplayTable.module.css?215c","components/structure/viewChildren/displayTable/DisplayTable.tsx","../node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faGlobeAmericas,\n    faCalendarAlt,\n    faUserCircle,\n    faMusic,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { ActivityConstructorProps } from \"../../types/structureTypes\";\nimport { useViewTitle } from \"../../contexts/ViewTitleContexts\";\nimport { useLocalStorage } from \"../../hooks/utils/useLocalStorage\";\n\nimport DisplayTable from \"../../components/structure/viewChildren/displayTable/DisplayTable\";\nimport DisplayGrid from \"../../components/structure/viewChildren/displayGrid/DisplayGrid\";\n\nconst LandingPage: React.FC<ActivityConstructorProps> = () => {\n    const { setTitle } = useViewTitle();\n    const { getItem } = useLocalStorage();\n    const userData = JSON.parse(getItem(\"lastFMData\"));\n\n    useEffect(() => {\n        setTitle(\"Landing Page\");\n    }, [setTitle]);\n    const renderUserInfo = () => {\n        if (!userData || !userData.user) return null;\n        const { user } = userData;\n        const registrationDate = new Date(user.registered.unixtime * 1000);\n        const currentDate = new Date();\n        let yearsSinceRegistration =\n            currentDate.getFullYear() - registrationDate.getFullYear();\n        const monthsDifference =\n            currentDate.getMonth() - registrationDate.getMonth();\n        if (\n            monthsDifference < 0 ||\n            (monthsDifference === 0 &&\n                currentDate.getDate() < registrationDate.getDate())\n        ) {\n            yearsSinceRegistration--;\n        }\n\n        const dataForDisplay = [\n            [\n                <span>\n                    <FontAwesomeIcon icon={faUserCircle} /> Last.FM Username\n                </span>,\n                user.name,\n            ],\n            [\n                <span>\n                    <FontAwesomeIcon icon={faGlobeAmericas} /> Location\n                </span>,\n                user.country,\n            ],\n            [\n                <span>\n                    <FontAwesomeIcon icon={faCalendarAlt} /> User Since\n                </span>,\n                registrationDate.toLocaleDateString(),\n            ],\n            [\n                <span>\n                    <FontAwesomeIcon icon={faCalendarAlt} /> Years Active\n                </span>,\n                `${yearsSinceRegistration} years`,\n            ],\n            [\n                <span>\n                    <FontAwesomeIcon icon={faMusic} /> Playcount\n                </span>,\n                Number(user.playcount).toLocaleString(),\n            ],\n        ];\n\n        return <DisplayTable data={dataForDisplay} />;\n    };\n\n    const userInfoElement = renderUserInfo();\n    const aboutDescription = (\n        <div>\n            <h3>About You!</h3>\n            This application generates visual representations of Last.FM data that you\n            have scrobbled over time. Here are some basic facts from your Last.FM\n            profile!\n            {userInfoElement}\n        </div>\n    );\n    const secondaryContent = (\n        <div>\n            <h3>Welcome Back!</h3>\n            This application generates visual representations of Last.FM data that you\n            have scrobbled over time. Here are some basic facts from your Last.FM\n            profile!\n        </div>\n    );\n\n    return (\n        <DisplayGrid\n            title=\"About\"\n            viewFrames={[\n                {\n                    content: aboutDescription,\n                    viewWidth: 100,\n                },\n                {\n                    content: secondaryContent,\n                    viewWidth: 100,\n                },\n            ]}\n        />\n    );\n};\n\nexport default LandingPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__ZU2oo\",\"empty\":\"ViewFrame_empty__6Vyig\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__lYpQo\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  const isEmptyContent = React.Children.count(children) === 0;\n  const sectionClassName = isEmptyContent\n    ? styles.viewSectionEmpty\n    : styles.viewSection;\n\n  return (\n    <div className={sectionClassName} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst isEmptyContent = (children: React.ReactNode): boolean => {\n  const childrenArray = React.Children.toArray(children);\n  return (\n    childrenArray.length === 0 ||\n    childrenArray.every(\n      (child) =>\n        React.isValidElement(child) &&\n        child.type === React.Fragment &&\n        React.Children.count(child.props.children) === 0,\n    )\n  );\n};\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 100,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const [firstChild, secondChild] = React.Children.toArray(children).slice(\n    0,\n    2,\n  );\n  const isContentEmpty = isEmptyContent([firstChild, secondChild]);\n\n  const adjustSplitPercentage = () => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const minChildWidth = 0;\n      const maxChildWidth = 1800;\n      let newSplit =\n        (Math.max(\n          minChildWidth,\n          Math.min(maxChildWidth, containerWidth * (splitPercentage / 100)),\n        ) /\n          containerWidth) *\n        100;\n      setAdjustedSplit(newSplit);\n    }\n  };\n\n  useEffect(() => {\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n    return () => window.removeEventListener(\"resize\", adjustSplitPercentage);\n  }, [splitPercentage]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={classNames(styles.viewFrame, {\n        [styles.empty]: isContentEmpty,\n      })}\n    >\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {firstChild}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {secondChild}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport ViewFrame from \"../../viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\nimport Styles from \"./DisplayGrid.module.css\";\ninterface ViewFrameInfo {\n  content: React.ReactNode;\n  viewWidth?: number;\n}\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  title?: string;\n  viewFrames: ViewFrameInfo[];\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({ viewFrames }) => {\n  const totalSpecifiedWidth = viewFrames.reduce(\n    (acc, { viewWidth }) => acc + (viewWidth || 0),\n    0,\n  );\n  const unspecifiedFramesCount = viewFrames.filter(\n    ({ viewWidth }) => viewWidth === undefined,\n  ).length;\n  const remainingWidthPerFrame =\n    (100 - totalSpecifiedWidth) / unspecifiedFramesCount;\n\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {viewFrames.map((frame, index) => (\n          <ViewFrame\n            key={index}\n            splitPercentage={frame.viewWidth || remainingWidthPerFrame}\n          >\n            {frame.content}\n          </ViewFrame>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DisplayGrid;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DisplayTable_table__wz8iq\",\"cell\":\"DisplayTable_cell__FEVfS\"};","// File: DisplayTable.tsx\nimport React from \"react\";\nimport styles from \"./DisplayTable.module.css\";\n\ntype TableCell = string | JSX.Element;\n\ninterface TableProps {\n  data: TableCell[][];\n}\n\nconst DisplayTable: React.FC<TableProps> = ({ data }) => {\n  if (data.length === 0 || (data.length > 0 && data[0].length === 0)) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={`row-${rowIndex}`}>\n            {row.map((cell, cellIndex) => (\n              <td\n                key={`cell-${rowIndex}-${cellIndex}`}\n                className={`${styles.cell} ${cellIndex === 0 ? styles.boldText : \"\"}`}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayTable;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["LandingPage","setTitle","useViewTitle","getItem","useLocalStorage","userData","JSON","parse","useEffect","userInfoElement","renderUserInfo","user","registrationDate","Date","registered","unixtime","currentDate","yearsSinceRegistration","getFullYear","monthsDifference","getMonth","getDate","dataForDisplay","_jsxs","children","_jsx","FontAwesomeIcon","icon","faUserCircle","name","faGlobeAmericas","country","faCalendarAlt","toLocaleDateString","concat","faMusic","Number","playcount","toLocaleString","DisplayTable","data","aboutDescription","secondaryContent","DisplayGrid","title","viewFrames","content","viewWidth","_ref","style","sectionClassName","React","count","styles","viewSectionEmpty","viewSection","className","splitPercentage","containerRef","useRef","adjustedSplit","setAdjustedSplit","useState","firstChild","secondChild","toArray","slice","isContentEmpty","childrenArray","length","every","child","type","props","isEmptyContent","adjustSplitPercentage","current","containerWidth","offsetWidth","minChildWidth","maxChildWidth","newSplit","Math","max","min","window","addEventListener","removeEventListener","ref","classNames","ViewSection","width","remainingWidthPerFrame","reduce","acc","_ref2","filter","_ref3","undefined","_Fragment","display","flexDirection","map","frame","index","ViewFrame","table","row","rowIndex","cell","cellIndex","boldText","hasOwn","hasOwnProperty","classes","i","arguments","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default"],"sourceRoot":""}