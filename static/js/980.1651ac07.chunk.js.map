{"version":3,"file":"static/js/980.1651ac07.chunk.js","mappings":"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","sources":["webpack://jaze/./src/components/foundations/optionList/OptionList.module.css?8b35","components/foundations/optionList/OptionList.tsx","webpack://jaze/./src/components/foundations/input/Input.module.css?cc3b","components/foundations/input/Input.tsx","webpack://jaze/./src/components/jaze/timestampSelector/TimestampSelector.module.css?7c97","components/jaze/timestampSelector/TimestampSelector.tsx","webpack://jaze/./src/components/jaze/criteriaSelector/CriteriaSelector.module.css?111d","components/jaze/criteriaSelector/CriteriaSelector.tsx","components/ui/mainForm/MainForm.tsx","Application/Main/Main.tsx","webpack://jaze/./src/components/foundations/button/Button.module.css?d28d","components/foundations/button/Button.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/views/displayGrid/DisplayGrid.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"optionList\":\"OptionList_optionList__0VtRw\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport { OptionListProps } from \"../../../types/foundationTypes\";\nimport Button from \"../button/Button\";\nimport styles from \"./OptionList.module.css\";\n\nconst OptionList: React.FC<OptionListProps> = ({ options, dataType }) => {\n  const [visibleOptions, setVisibleOptions] = useState(options);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const updateVisibleOptions = () => {\n      if (containerRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        let totalWidth = 0;\n        let visibleCount = 0;\n\n        options.forEach((_option, _index) => {\n          const optionWidth = 150;\n          if (totalWidth + optionWidth <= containerWidth) {\n            totalWidth += optionWidth;\n            visibleCount++;\n          } else {\n            return;\n          }\n        });\n\n        setVisibleOptions(options.slice(0, visibleCount));\n      }\n    };\n\n    updateVisibleOptions();\n\n    const resizeObserver = new ResizeObserver(updateVisibleOptions);\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current);\n    }\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [options]);\n\n  if (!Array.isArray(options) && process.env.REACT_APP_IS_DEBUG) {\n    console.error(\n      'OptionList component expects \"options\" prop to be an array.',\n    );\n    return null;\n  }\n\n  if (options.length) {\n    return (\n      <div ref={containerRef} className={styles.optionList}>\n        {visibleOptions.map((option, index) => (\n          <Button\n            key={index}\n            dataType={dataType}\n            onClick={(_e) => {\n              const input = document.querySelector(\n                `input[datatype='${dataType}']`,\n              ) as HTMLInputElement;\n              if (input) {\n                input.value = option.value;\n              }\n            }}\n          >\n            {option.key}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default OptionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputField\":\"Input_inputField__3UHLs\"};","import React from \"react\";\nimport styles from \"./Input.module.css\";\nimport { InputProps } from \"../../../types/foundationTypes\";\n\nconst Input: React.FC<InputProps> = ({\n  id,\n  type,\n  name,\n  value,\n  placeholder,\n  onChange,\n  dataType,\n  style,\n}) => {\n  return (\n    <input\n      id={id}\n      type={type}\n      name={name}\n      value={value}\n      placeholder={placeholder}\n      className={styles.inputField}\n      onChange={onChange}\n      datatype={dataType}\n      style={style}\n    />\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"timestampSelector\":\"TimestampSelector_timestampSelector__D1g4s\",\"timeLabel\":\"TimestampSelector_timeLabel__+42R1\"};","import React from \"react\";\nimport OptionList from \"../../foundations/optionList/OptionList\";\nimport Input from \"../../foundations/input/Input\";\nimport { SelectionType } from \"../../../types/dataTypes\";\nimport styles from \"./TimestampSelector.module.css\";\n\nconst TimestampSelector: React.FC<{\n    timestamp: string;\n    label: string;\n    onOptionSelect?: (timestamp: string) => void;\n}> = ({ timestamp, label, onOptionSelect }) => {\n    const [selectedTimestamp, setSelectedTimestamp] = React.useState(timestamp);\n    const currentYear = React.useMemo(() => new Date().getFullYear(), []);\n    const type: SelectionType = label.includes(\"Start\") ? \"yearStart\" : \"yearEnd\";\n    const [validationError, setValidationError] = React.useState<string | null>(\n        null,\n    );\n\n    const handleOptionClick = (optionValue: string) => {\n        if (validateTimestamp(optionValue)) {\n            setSelectedTimestamp(optionValue);\n            setValidationError(null);\n            if (onOptionSelect) {\n                onOptionSelect(optionValue);\n            }\n        }\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (validateTimestamp(value)) {\n            setSelectedTimestamp(value);\n            setValidationError(null);\n            if (onOptionSelect) {\n                onOptionSelect(value);\n            }\n        }\n    };\n\n    const validateTimestamp = (value: string) => {\n        if (type === \"yearEnd\") {\n            const yearStart = new Date(selectedTimestamp).getFullYear();\n            const yearEnd = new Date(value).getFullYear();\n            if (yearEnd < yearStart) {\n                setValidationError(\"YearEnd cannot be earlier than YearStart.\");\n                return false;\n            }\n        } else if (type === \"yearStart\") {\n            const yearEnd = new Date(selectedTimestamp).getFullYear();\n            const yearStart = new Date(value).getFullYear();\n            if (yearStart > yearEnd) {\n                setValidationError(\"YearStart cannot be later than YearEnd.\");\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const yearsOptions = React.useMemo(() => {\n        return Array.from({ length: 10 }, (_, i) => {\n            const year = currentYear - i;\n            const date = new Date(`${year}-01-01`).toISOString().slice(0, 10);\n\n            return {\n                key: `${year}`,\n                dataType: type,\n                value: date,\n                label: date,\n                onClick: () => handleOptionClick(date),\n            };\n        });\n    }, [currentYear, type]);\n\n    return (\n        <div className={styles.timestampSelector}>\n            <span className={styles.timeLabel}>{label}</span>\n            <Input\n                id={label}\n                type=\"date\"\n                value={selectedTimestamp}\n                dataType={type}\n                onChange={handleInputChange}\n                style={{ borderColor: validationError ? \"red\" : undefined }}\n            />\n            {validationError && <p className={styles.errorText}>{validationError}</p>}\n            <OptionList dataType={type} options={yearsOptions} />\n        </div>\n    );\n};\n\nexport default TimestampSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"criteriaSelector\":\"CriteriaSelector_criteriaSelector__s89+E\"};","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../foundations/input/Input\";\nimport OptionList from \"../../foundations/optionList/OptionList\";\nimport { SelectionType } from \"../../../types/structureTypes\";\nimport { Option } from \"types/foundationTypes\";\nimport styles from \"./CriteriaSelector.module.css\";\n\nconst CriteriaSelector: React.FC<{\n  selectionType: SelectionType;\n  setSelectionType: (value: SelectionType) => void;\n  formData: { [key: string]: any };\n  setFormData: (value: { [key: string]: any }) => void;\n  albumData: any;\n  artistData: any;\n  trackData: any;\n}> = ({\n  selectionType,\n  setSelectionType,\n  formData,\n  setFormData,\n  albumData,\n  artistData,\n  trackData,\n}) => {\n  const [options, setOptions] = useState<Option[]>([]);\n  useEffect(() => {\n    let newOptions: Option[] = [];\n    switch (selectionType) {\n      case \"album\":\n        newOptions =\n          albumData?.topalbums.album.map((album) => ({\n            value: album.name,\n            key: album.name,\n            datatype: \"album\",\n          })) || [];\n        break;\n      case \"artist\":\n        newOptions =\n          artistData?.topartists.artist.map((artist) => ({\n            value: artist.name,\n            key: artist.name,\n            datatype: \"artist\",\n          })) || [];\n        break;\n      case \"track\":\n        newOptions =\n          trackData?.toptracks.track.map((track) => ({\n            value: track.name,\n            key: track.name,\n            datatype: \"track\",\n          })) || [];\n        break;\n    }\n    setOptions(newOptions);\n  }, [albumData, artistData, trackData, selectionType]);\n\n  const changeCat = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newType = event.target.value as SelectionType;\n    setSelectionType(newType);\n  };\n  const changeCatButtons = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n  const catSelector = (\n    <select value={selectionType} onChange={changeCat}>\n      {[\"artist\", \"album\", \"track\"].map((type) => (\n        <option key={type} value={type} title=\"Criteria\">\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </option>\n      ))}\n    </select>\n  );\n\n  return (\n    <div className={styles.criteriaSelector}>\n      {catSelector}\n      <Input\n        id={selectionType}\n        dataType={selectionType}\n        name={selectionType}\n        value={formData[selectionType] || \"\"}\n        onChange={changeCatButtons}\n        placeholder={`Enter ${selectionType}`}\n        type={\"\"}\n      />\n      <OptionList options={options} dataType={selectionType} />\n    </div>\n  );\n};\n\nexport default CriteriaSelector;\n","// FileName: GenerateDataForm.tsx\nimport React, { useState } from \"react\";\nimport TimeStampSelector from \"../../jaze/timestampSelector/TimestampSelector\";\nimport { fetchUserData } from \"../../../hooks/dataManagement/fetchUserData\";\nimport { MainFormProps, SelectionType } from \"../../../types/structureTypes\";\nimport Button from \"../../foundations/button/Button\";\nimport CriteriaSelector from \"../../jaze/criteriaSelector/CriteriaSelector\";\nimport Styles from \"./MainForm.module.css\";\n\nconst MainForm: React.FC<MainFormProps> = ({\n  formData,\n  setFormData,\n  userID,\n}) => {\n  const { albumData, artistData, trackData } = fetchUserData(userID);\n  const [selectionType, setSelectionType] = useState<SelectionType>(\"artist\");\n  const handleStartTimeSelect = (timestamp: string) => {\n    setFormData({ ...formData, startTimestamp: timestamp });\n  };\n\n  const handleEndTimeSelect = (timestamp: string) => {\n    setFormData({ ...formData, endTimestamp: timestamp });\n  };\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log(\n            `Selection Type: ${selectionType}, Start Time: ${formData.startTimestamp}, End Time: ${formData.endTimestamp}`\n        );\n    };\n  return (\n      <form onSubmit={handleSubmit} id=\"GenerateVisForm\">\n      <CriteriaSelector\n        selectionType={selectionType}\n        setSelectionType={setSelectionType}\n        formData={formData}\n        setFormData={setFormData}\n        albumData={albumData}\n        artistData={artistData}\n        trackData={trackData}\n      />\n      <TimeStampSelector\n        timestamp={formData.startTimestamp}\n        label=\"Start Time\"\n        onOptionSelect={handleStartTimeSelect}\n      />\n      <TimeStampSelector\n        timestamp={formData.endTimestamp}\n        label=\"End Time\"\n        onOptionSelect={handleEndTimeSelect}\n      />\n      <Button type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default MainForm;\n","// src/components/Main.tsx\nimport React, { useEffect, useState } from \"react\";\nimport { FormData, ActivityConstructorProps } from \"../../types/structureTypes\";\n\nimport MainForm from \"../../components/ui/mainForm/MainForm\";\nimport DisplayGrid from \"../../components/views/displayGrid/DisplayGrid\";\nimport styles from \"src/globals/globalStyles.css\";\nimport { useViewTitle } from \"../../contexts/ViewTitleContexts\";\n\nconst Main: React.FC<ActivityConstructorProps> = ({ userID }) => {\n  const [formData, setFormData] = useState<FormData>({\n    selectionType: \"track\",\n  });\n  const { setTitle } = useViewTitle();\n  const handleSetFormData = (newFormData: FormData) => setFormData(newFormData);\n  useEffect(() => {\n    setTitle(\"Main\");\n  }, [setTitle]);\n\n  const formContent = (\n    <MainForm\n      formData={formData}\n      setFormData={handleSetFormData}\n      selectionType={formData.selectionType}\n      userID={userID}\n    />\n  );\n  const mainContent = (\n    <div>\n      <h3>View Listening Patterns Over Time</h3>\n      <span className={styles.description}>\n        JaZe is a tool that you can use to display your Last.FM data. Created by\n        J Kang in 2024, written in TypeScript. From one stats nerd to another,\n        enjoy! Enjoy exploring, and let me know what you think! To view data,\n        enter a selection type (artist, album, or track) and a timestamp. Then,\n        let JaZe do the rest.\n        {formContent}\n      </span>\n    </div>\n  );\n\n  return (\n    <DisplayGrid\n      title={\"Main\"}\n      userID={userID}\n      viewFrames={[\n        {\n          content: mainContent,\n          viewWidth: 100,\n        },\n      ]}\n    />\n  );\n};\n\nexport default Main;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__RlBKX\",\"gradientLoop\":\"Button_gradientLoop__gZwKe\"};","// Filename: Button.tsx\nimport React, { forwardRef } from \"react\";\nimport styles from \"./Button.module.css\";\nimport { ButtonProps } from \"../../../types/foundationTypes\";\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      onClick,\n      children,\n      type = \"button\",\n      className,\n      disabled = false,\n      dataType,\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n        className={`${styles.button} ${className || \"\"} ${disabled ? styles.disabled : \"\"}`}\n        onClick={onClick}\n        disabled={disabled}\n        datatype={dataType}\n      >\n        {children}\n      </button>\n    );\n  },\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__ZU2oo\",\"empty\":\"ViewFrame_empty__6Vyig\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__lYpQo\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  const isEmptyContent = React.Children.count(children) === 0;\n  const sectionClassName = isEmptyContent\n    ? styles.viewSectionEmpty\n    : styles.viewSection;\n\n  return (\n    <div className={sectionClassName} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst isEmptyContent = (children: React.ReactNode): boolean => {\n  const childrenArray = React.Children.toArray(children);\n  return (\n    childrenArray.length === 0 ||\n    childrenArray.every(\n      (child) =>\n        React.isValidElement(child) &&\n        child.type === React.Fragment &&\n        React.Children.count(child.props.children) === 0,\n    )\n  );\n};\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 100,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const [firstChild, secondChild] = React.Children.toArray(children).slice(\n    0,\n    2,\n  );\n  const isContentEmpty = isEmptyContent([firstChild, secondChild]);\n\n  const adjustSplitPercentage = () => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const minChildWidth = 0;\n      const maxChildWidth = 1800;\n      let newSplit =\n        (Math.max(\n          minChildWidth,\n          Math.min(maxChildWidth, containerWidth * (splitPercentage / 100)),\n        ) /\n          containerWidth) *\n        100;\n      setAdjustedSplit(newSplit);\n    }\n  };\n\n  useEffect(() => {\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n    return () => window.removeEventListener(\"resize\", adjustSplitPercentage);\n  }, [splitPercentage]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={classNames(styles.viewFrame, {\n        [styles.empty]: isContentEmpty,\n      })}\n    >\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {firstChild}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {secondChild}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport ViewFrame from \"../../structure/viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\nimport Styles from \"components/views/displayGrid/DisplayGrid.module.css\";\ninterface ViewFrameInfo {\n  content: React.ReactNode;\n  viewWidth?: number;\n}\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  title?: string;\n  viewFrames: ViewFrameInfo[];\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({ viewFrames }) => {\n  const totalSpecifiedWidth = viewFrames.reduce(\n    (acc, { viewWidth }) => acc + (viewWidth || 0),\n    0,\n  );\n  const unspecifiedFramesCount = viewFrames.filter(\n    ({ viewWidth }) => viewWidth === undefined,\n  ).length;\n  const remainingWidthPerFrame =\n    (100 - totalSpecifiedWidth) / unspecifiedFramesCount;\n\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {viewFrames.map((frame, index) => (\n          <ViewFrame\n            key={index}\n            splitPercentage={frame.viewWidth || remainingWidthPerFrame}\n          >\n            {frame.content}\n          </ViewFrame>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DisplayGrid;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["_ref","options","dataType","visibleOptions","setVisibleOptions","useState","containerRef","useRef","useEffect","updateVisibleOptions","current","containerWidth","offsetWidth","totalWidth","visibleCount","forEach","_option","_index","slice","resizeObserver","ResizeObserver","observe","disconnect","Array","isArray","length","_jsx","ref","className","styles","children","map","option","index","Button","onClick","_e","input","document","querySelector","concat","value","key","console","error","id","type","name","placeholder","onChange","style","datatype","timestamp","label","onOptionSelect","selectedTimestamp","setSelectedTimestamp","React","currentYear","Date","getFullYear","includes","validationError","setValidationError","validateTimestamp","yearStart","yearEnd","yearsOptions","from","_","i","year","date","toISOString","optionValue","_jsxs","timestampSelector","timeLabel","Input","e","target","borderColor","undefined","errorText","OptionList","selectionType","setSelectionType","formData","setFormData","albumData","artistData","trackData","setOptions","newOptions","topalbums","album","topartists","artist","toptracks","track","catSelector","event","newType","title","charAt","toUpperCase","prev","userID","fetchUserData","onSubmit","preventDefault","log","startTimestamp","endTimestamp","CriteriaSelector","TimeStampSelector","setTitle","useViewTitle","formContent","MainForm","newFormData","mainContent","description","DisplayGrid","viewFrames","content","viewWidth","forwardRef","disabled","button","sectionClassName","count","viewSectionEmpty","viewSection","splitPercentage","adjustedSplit","setAdjustedSplit","firstChild","secondChild","toArray","isContentEmpty","childrenArray","every","child","props","isEmptyContent","adjustSplitPercentage","minChildWidth","maxChildWidth","newSplit","Math","max","min","window","addEventListener","removeEventListener","classNames","ViewSection","width","remainingWidthPerFrame","reduce","acc","_ref2","filter","_ref3","_Fragment","display","flexDirection","frame","ViewFrame","hasOwn","hasOwnProperty","classes","arguments","arg","appendClass","parseValue","apply","toString","Object","prototype","call","newClass","module","exports","default"],"sourceRoot":""}