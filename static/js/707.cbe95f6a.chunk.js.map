{"version":3,"file":"static/js/707.cbe95f6a.chunk.js","mappings":"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","sources":["webpack://jaze/./src/components/jaze/albumCard/AlbumCard.module.css?e1ee","components/jaze/albumCard/AlbumCard.tsx","Application/Tops/Tops.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/views/displayGrid/DisplayGrid.tsx","webpack://jaze/./src/components/views/displayTable/DisplayTable.module.css?a90e","components/views/displayTable/DisplayTable.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"albumCard\":\"AlbumCard_albumCard__DZu2o\",\"albumImage\":\"AlbumCard_albumImage__jtD6n\",\"caption\":\"AlbumCard_caption__4Hc5y\"};","import React from \"react\";\nimport styles from \"./AlbumCard.module.css\";\n\ninterface AlbumCardProps {\n  src: string;\n  alt: string;\n  caption: string;\n}\n\nconst AlbumCard: React.FC<AlbumCardProps> = ({ src, alt, caption }) => {\n  return (\n    <div className={styles.albumCard}>\n      <img src={src} alt={alt} className={styles.albumImage} />\n      <figcaption className={styles.caption}>{caption}</figcaption>\n    </div>\n  );\n};\n\nexport default AlbumCard;\n","import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserCircle,\n  faGlobeAmericas,\n  faCalendarAlt,\n  faMusic,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { fetchUserData } from \"../../hooks/dataManagement/fetchUserData\";\nimport DisplayGrid from \"../../components/views/displayGrid/DisplayGrid\";\nimport DisplayTable from \"../../components/views/displayTable/DisplayTable\";\nimport { ActivityConstructorProps } from \"../../types/structureTypes\";\nimport { useViewTitle } from \"../../contexts/ViewTitleContexts\";\nimport AlbumCard from \"../../components/jaze/albumCard/AlbumCard\";\n\nconst Tops: React.FC<ActivityConstructorProps> = ({ userID }) => {\n  const { setTitle } = useViewTitle();\n\n  useEffect(() => {\n    setTitle(\"Tops\");\n  }, [setTitle]);\n\n  const { userData, albumData, artistData, trackData, error, loading } =\n    fetchUserData(userID);\n\n  const formatNumber = (number: number) =>\n    new Intl.NumberFormat().format(number);\n\n  const getLargeImage = (images: Array<{ size: string; \"#text\": string }>) =>\n    images.find((image) => image.size === \"large\")?.[\"#text\"] || \"\";\n\n  const userImage = userData?.user?.image?.[0][\"#text\"];\n\n  const renderItemContent = (\n    data: any,\n    type: \"artist\" | \"album\" | \"track\",\n    isTable: boolean = false,\n  ) => {\n    const dataType =\n      type === \"artist\"\n        ? data?.topartists\n        : type === \"album\"\n          ? data?.topalbums\n          : data?.toptracks;\n    const items = dataType[type].slice(0, isTable ? 10 : 1);\n\n    return isTable ? (\n      <DisplayTable\n        data={items.map((item: any, index: number) => [\n          `${index + 1}`,\n          item.name,\n          `${formatNumber(+item.playcount)} scrobbles`,\n        ])}\n      />\n    ) : (\n      items.map((item: any) => (\n        <AlbumCard\n          key={item.name}\n          src={getLargeImage(item.image)}\n          alt={item.name}\n          caption={item.name}\n        />\n      ))\n    );\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  const renderUserInfo = () => {\n    if (!userData || !userData.user) return null;\n    const { user } = userData;\n    const registrationDate = new Date(user.registered.unixtime * 1000);\n    const yearsSinceRegistration =\n      new Date().getFullYear() - registrationDate.getFullYear();\n\n    const dataForDisplay: (string | JSX.Element)[][] = [\n      [\n        <FontAwesomeIcon key=\"name-icon\" icon={faUserCircle} />,\n        \"Name\",\n        user.name,\n      ],\n      [\n        <FontAwesomeIcon key=\"country-icon\" icon={faGlobeAmericas} />,\n        \"Country\",\n        user.country,\n      ],\n      [\n        <FontAwesomeIcon key=\"user-since-icon\" icon={faCalendarAlt} />,\n        \"User Since\",\n        registrationDate.toLocaleDateString(),\n      ],\n      [\n        <FontAwesomeIcon key=\"years-active-icon\" icon={faCalendarAlt} />,\n        \"Years Active\",\n        `${yearsSinceRegistration} years`,\n      ],\n      [\n        <FontAwesomeIcon key=\"playcount-icon\" icon={faMusic} />,\n        \"Playcount\",\n        formatNumber(user.playcount),\n      ],\n    ];\n\n    return <DisplayTable data={dataForDisplay} />;\n  };\n\n  return (\n    <>\n      <DisplayGrid\n        title=\"Top Stats\"\n        userID={userID}\n        viewFrames={[\n          {\n            content: (\n              <>\n                {renderItemContent(artistData, \"artist\")}\n                <h3>Your Top Artists of all time</h3>\n                {renderItemContent(artistData, \"artist\", true)}\n              </>\n            ),\n            viewWidth: 100,\n          },\n          {\n            content: (\n              <>\n                {renderItemContent(albumData, \"album\")}\n                <h3>Your Top Albums of all time</h3>\n                {renderItemContent(albumData, \"album\", true)}\n              </>\n            ),\n            viewWidth: 100,\n          },\n        ]}\n      />\n      <DisplayGrid\n        viewFrames={[\n          {\n            content: (\n              <>\n                {renderItemContent(trackData, \"track\")}\n                <h3>Your Top Tracks of all time</h3>\n                {renderItemContent(trackData, \"track\", true)}\n              </>\n            ),\n            viewWidth: 100,\n          },\n          {\n            content: (\n              <>\n                <AlbumCard\n                  key=\"userImage\"\n                  src={userImage}\n                  alt=\"User\"\n                  caption={userData.user.realname}\n                />\n                <h3>Who is {userData.user.name}???</h3>\n                {renderUserInfo()}\n              </>\n            ),\n            viewWidth: 100,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default Tops;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__ZU2oo\",\"empty\":\"ViewFrame_empty__6Vyig\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__lYpQo\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  const isEmptyContent = React.Children.count(children) === 0;\n  const sectionClassName = isEmptyContent\n    ? styles.viewSectionEmpty\n    : styles.viewSection;\n\n  return (\n    <div className={sectionClassName} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst isEmptyContent = (children: React.ReactNode): boolean => {\n  const childrenArray = React.Children.toArray(children);\n  return (\n    childrenArray.length === 0 ||\n    childrenArray.every(\n      (child) =>\n        React.isValidElement(child) &&\n        child.type === React.Fragment &&\n        React.Children.count(child.props.children) === 0,\n    )\n  );\n};\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 100,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const [firstChild, secondChild] = React.Children.toArray(children).slice(\n    0,\n    2,\n  );\n  const isContentEmpty = isEmptyContent([firstChild, secondChild]);\n\n  const adjustSplitPercentage = () => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const minChildWidth = 0;\n      const maxChildWidth = 1800;\n      let newSplit =\n        (Math.max(\n          minChildWidth,\n          Math.min(maxChildWidth, containerWidth * (splitPercentage / 100)),\n        ) /\n          containerWidth) *\n        100;\n      setAdjustedSplit(newSplit);\n    }\n  };\n\n  useEffect(() => {\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n    return () => window.removeEventListener(\"resize\", adjustSplitPercentage);\n  }, [splitPercentage]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={classNames(styles.viewFrame, {\n        [styles.empty]: isContentEmpty,\n      })}\n    >\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {firstChild}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {secondChild}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport ViewFrame from \"../../structure/viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\nimport Styles from \"components/views/displayGrid/DisplayGrid.module.css\";\ninterface ViewFrameInfo {\n  content: React.ReactNode;\n  viewWidth?: number;\n}\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  title?: string;\n  viewFrames: ViewFrameInfo[];\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({ viewFrames }) => {\n  const totalSpecifiedWidth = viewFrames.reduce(\n    (acc, { viewWidth }) => acc + (viewWidth || 0),\n    0,\n  );\n  const unspecifiedFramesCount = viewFrames.filter(\n    ({ viewWidth }) => viewWidth === undefined,\n  ).length;\n  const remainingWidthPerFrame =\n    (100 - totalSpecifiedWidth) / unspecifiedFramesCount;\n\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {viewFrames.map((frame, index) => (\n          <ViewFrame\n            key={index}\n            splitPercentage={frame.viewWidth || remainingWidthPerFrame}\n          >\n            {frame.content}\n          </ViewFrame>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DisplayGrid;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DisplayTable_table__PCu12\",\"cell\":\"DisplayTable_cell__oHF8z\"};","// File: DisplayTable.tsx\nimport React from \"react\";\nimport styles from \"./DisplayTable.module.css\";\n\ntype TableCell = string | JSX.Element;\n\ninterface TableProps {\n  data: TableCell[][];\n}\n\nconst DisplayTable: React.FC<TableProps> = ({ data }) => {\n  if (data.length === 0 || (data.length > 0 && data[0].length === 0)) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={`row-${rowIndex}`}>\n            {row.map((cell, cellIndex) => (\n              <td\n                key={`cell-${rowIndex}-${cellIndex}`}\n                className={`${styles.cell} ${cellIndex === 0 ? styles.boldText : \"\"}`}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayTable;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["_ref","src","alt","caption","_jsxs","className","styles","children","_jsx","_userData$user","_userData$user$image","userID","setTitle","useViewTitle","useEffect","userData","albumData","artistData","trackData","error","loading","fetchUserData","formatNumber","number","Intl","NumberFormat","format","getLargeImage","images","_images$find","find","image","size","userImage","user","renderItemContent","data","type","isTable","arguments","length","undefined","items","topartists","topalbums","toptracks","slice","DisplayTable","map","item","index","concat","name","playcount","AlbumCard","_Fragment","DisplayGrid","title","viewFrames","content","viewWidth","realname","renderUserInfo","registrationDate","Date","registered","unixtime","yearsSinceRegistration","getFullYear","dataForDisplay","FontAwesomeIcon","icon","faUserCircle","faGlobeAmericas","country","faCalendarAlt","toLocaleDateString","faMusic","style","sectionClassName","React","count","viewSectionEmpty","viewSection","splitPercentage","containerRef","useRef","adjustedSplit","setAdjustedSplit","useState","firstChild","secondChild","toArray","isContentEmpty","childrenArray","every","child","props","isEmptyContent","adjustSplitPercentage","current","containerWidth","offsetWidth","minChildWidth","maxChildWidth","newSplit","Math","max","min","window","addEventListener","removeEventListener","ref","classNames","ViewSection","width","remainingWidthPerFrame","reduce","acc","_ref2","filter","_ref3","display","flexDirection","frame","ViewFrame","table","row","rowIndex","cell","cellIndex","boldText","hasOwn","hasOwnProperty","classes","i","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default"],"sourceRoot":""}