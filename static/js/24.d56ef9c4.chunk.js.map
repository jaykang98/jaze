{"version":3,"file":"static/js/24.d56ef9c4.chunk.js","mappings":";iPAyBA,MAqKA,EArKqDA,IAAiB,IAAhB,OAAEC,GAAQD,EAC9D,MAAM,SAAEE,IAAaC,EAAAA,EAAAA,MACf,iBAAEC,EAAgB,kBAAEC,EAAiB,cAAEC,IAAkBC,EAAAA,EAAAA,MACzD,YAAEC,EAAW,kBAAEC,EAAiB,SAAEC,IAAaC,EAAAA,EAAAA,MAC9CC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAkB,GAChDC,EAAiBA,KACrBF,GAAeD,GACfI,SAASC,KAAKC,UAAUC,OAAO,YAAY,GAE7CC,EAAAA,EAAAA,YAAU,KACRlB,EAAS,WAAW,GACnB,CAACA,IACJ,MAAMmB,EAA4BA,MAChCC,EAAAA,EAAAA,OACIC,EAAAA,EAAAA,MACFC,MAAM,sBAENA,MAAM,wBAERC,EAAAA,EAAAA,IAAY,EAkCRC,GAhCYC,EAAAA,EAAAA,UAChB,IAAM,CACJ,CACEC,aAAc,kBACdC,OAAQpB,IAAsBC,EAAWF,EACzCsB,YAAcrB,IAAiC,UAAX,SACpCsB,KAAMC,EAAAA,IACNC,UAAU,GAEZ,CACEL,aAAc,kBACdC,OAAQxB,IAAsBC,EAAgBF,EAC9C0B,YAAczB,IAAiC,UAAX,SACpC0B,KAAMG,EAAAA,KAER,CACEN,aAAc,sBACdC,OAAQR,EACRS,aAAcP,EAAAA,EAAAA,MAAoC,eAAjB,eACjCQ,KAAMI,EAAAA,IACNF,UAAU,GAEZ,CACEL,aAAc,qBACdC,OAAQd,EACRe,YAAalB,EAAa,aAAe,YACzCmB,KAAMK,EAAAA,IACNH,UAAU,KAGd,CAACxB,EAAmBD,IAEc6B,KAAKC,GAAW,EAClDC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAEdT,KAAMO,EAAOP,KACb,cAAY,QAAM,GAAAU,OAFVH,EAAOV,aAAY,UAI7BU,EAAOV,cACPW,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAELC,QAASL,EAAOT,OAChBI,SAAUK,EAAOL,SAASW,SAEzBN,EAAOR,aAAW,GAAAW,OAJXH,EAAOV,aAAY,eAQzBiB,EAAa,CACjB,EAACN,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACT,KAAMe,EAAAA,MAAc,cAAe,UACrD,EACEP,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACT,KAAMgB,EAAAA,MACvB,kBACA,eAEF,EACER,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACT,KAAMiB,EAAAA,MACvB,gBACAT,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAASA,IACPM,OAAOC,KAAK,iDACbN,SACF,YAIH,EACEL,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACT,KAAMoB,EAAAA,MACvB,sBACAZ,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAASA,IACNM,OAAOG,SAASC,KAAO,oCACzBT,SACF,mBAIH,EACEL,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACT,KAAMgB,EAAAA,MACvB,gCACAR,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAASA,IACNM,OAAOG,SAASC,KACf,0DACHT,SACF,eAML,OACEL,EAAAA,EAAAA,KAACe,EAAAA,EAAW,CACVC,MAAM,WACNtD,OAAQA,EACRuD,WAAY,CACV,CACEC,SACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAf,SAAA,EACEL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,gPAMHc,EAAAA,EAAAA,MAAA,MAAAd,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,4EAIJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,2EAIJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,+FAIJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,yDACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,uEAIJL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,yCAIVgB,UAAW,KAEb,CACEH,SACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAf,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,oBACJL,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACC,KAAMpC,KACpBa,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACC,KAAMjB,OAGxBe,UAAW,OAGf,8DCzLN,SAAgB,OAAS,uBAAuB,aAAe,2CCI/D,MA2BA,GA3BeG,EAAAA,EAAAA,aACb,CAAA/D,EASEgE,KACI,IATJ,QACErB,EAAO,SACPC,EAAQ,KACRqB,EAAO,SAAQ,UACfC,EAAS,SACTjC,GAAW,EAAK,SAChBkC,GACDnE,EAGD,OACEuC,EAAAA,EAAAA,KAAA,UACEyB,IAAKA,EACLC,KAAMA,EACNC,UAAS,GAAAzB,OAAK2B,EAAOC,OAAM,KAAA5B,OAAIyB,GAAa,GAAE,KAAAzB,OAAIR,EAAWmC,EAAOnC,SAAW,IAC/EU,QAASA,EACTV,SAAUA,EACVqC,SAAUH,EAASvB,SAElBA,GACM,mFC1Bf,QAA4B,6BAA5B,EAAiE,yBCAjE,GAAgB,YAAc,+CCG9B,MAaA,EAbgD5C,IAA0B,IAAzB,SAAE4C,EAAQ,MAAE2B,GAAOvE,EAClE,MACMwE,EADoD,IAAnCC,EAAAA,SAAeC,MAAM9B,GAExCwB,EAAOO,iBACPP,EAAOQ,YAEX,OACErC,EAAAA,EAAAA,KAAA,OAAK2B,UAAWM,EAAkBD,MAAOA,EAAM3B,SAC5CA,GACG,ECyDV,EAnD4C5C,IAGrC,IAHsC,SAC3C4C,EAAQ,gBACRiC,EAAkB,KACnB7E,EACC,MAAM8E,GAAeC,EAAAA,EAAAA,QAAuB,OACrCC,EAAeC,IAAoBnE,EAAAA,EAAAA,UAAS+D,IAC5CK,EAAYC,GAAeV,EAAAA,SAAeW,QAAQxC,GAAUyC,MACjE,EACA,GAEIC,EAvBgB1C,KACtB,MAAM2C,EAAgBd,EAAAA,SAAeW,QAAQxC,GAC7C,OAC2B,IAAzB2C,EAAcC,QACdD,EAAcE,OACXC,GACCjB,EAAAA,eAAqBiB,IACrBA,EAAMzB,OAASQ,EAAAA,UACgC,IAA/CA,EAAAA,SAAeC,MAAMgB,EAAMC,MAAM/C,WACpC,EAcoBgD,CAAe,CAACV,EAAYC,IAE7CU,EAAwBA,KAC5B,GAAIf,EAAagB,QAAS,CACxB,MAAMC,EAAiBjB,EAAagB,QAAQE,YACtCC,EAAgB,EAChBC,EAAgB,KACtB,IAAIC,EACDC,KAAKC,IACJJ,EACAG,KAAKE,IAAIJ,EAAeH,GAAkBlB,EAAkB,OAE5DkB,EACF,IACFd,EAAiBkB,EACnB,GASF,OANA/E,EAAAA,EAAAA,YAAU,KACRyE,IACA5C,OAAOsD,iBAAiB,SAAUV,GAC3B,IAAM5C,OAAOuD,oBAAoB,SAAUX,KACjD,CAAChB,KAGFnB,EAAAA,EAAAA,MAAA,OACEM,IAAKc,EACLZ,UAAWuC,IAAWrC,EAAkB,CACtC,CAACA,GAAekB,IACf1C,SAAA,EAEHL,EAAAA,EAAAA,KAACmE,EAAW,CAACnC,MAAO,CAAEoC,MAAM,GAADlE,OAAKuC,EAAa,MAAMpC,SAChDsC,KAEH3C,EAAAA,EAAAA,KAACmE,EAAW,CAACnC,MAAO,CAAEoC,MAAM,GAADlE,OAAK,IAAMuC,EAAa,MAAMpC,SACtDuC,MAEC,ECzBV,EA3BgDnF,IAAqB,IAApB,WAAEwD,GAAYxD,EAC7D,MAOM4G,GACH,IARyBpD,EAAWqD,QACrC,CAACC,EAAGC,KAAA,IAAE,UAAEnD,GAAWmD,EAAA,OAAKD,GAAOlD,GAAa,EAAE,GAC9C,IAE6BJ,EAAWwD,QACxCC,IAAA,IAAC,UAAErD,GAAWqD,EAAA,YAAmBC,IAAdtD,CAAuB,IAC1C4B,OAIF,OACEjD,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAf,UACEL,EAAAA,EAAAA,KAAA,WAASgC,MAAO,CAAE4C,QAAS,OAAQC,cAAe,OAAQxE,SACvDY,EAAWnB,KAAI,CAACgF,EAAOC,KACtB/E,EAAAA,EAAAA,KAACgF,EAAS,CAER1C,gBAAiBwC,EAAMzD,WAAagD,EAAuBhE,SAE1DyE,EAAM5D,SAHF6D,QAOV,uDCpCP,SAAgB,MAAQ,4BAA4B,KAAO,yCCS3D,MAyBA,EAzB2CtH,IAAe,IAAd,KAAE8D,GAAM9D,EAClD,OAAoB,IAAhB8D,EAAK0B,QAAiB1B,EAAK0B,OAAS,GAAwB,IAAnB1B,EAAK,GAAG0B,QAC5CjD,EAAAA,EAAAA,KAAA,OAAAK,SAAK,uBAIZL,EAAAA,EAAAA,KAAA,SAAO2B,UAAWE,EAAOoD,MAAM5E,UAC7BL,EAAAA,EAAAA,KAAA,SAAAK,SACGkB,EAAKzB,KAAI,CAACoF,EAAKC,KACdnF,EAAAA,EAAAA,KAAA,MAAAK,SACG6E,EAAIpF,KAAI,CAACsF,EAAMC,KACdrF,EAAAA,EAAAA,KAAA,MAEE2B,UAAS,GAAAzB,OAAK2B,EAAOuD,KAAI,KAAAlF,OAAkB,IAAdmF,EAAkBxD,EAAOyD,SAAW,IAAKjF,SAErE+E,GAAI,QAAAlF,OAHQiF,EAAQ,KAAAjF,OAAImF,OAK3B,OAAAnF,OARYiF,SAYd,gBC/BZ,OAOC,WACA,aAEA,IAAII,EAAS,CAAC,EAAEC,eAEhB,SAAStB,IAGR,IAFA,IAAIuB,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAU1C,OAAQyC,IAAK,CAC1C,IAAIE,EAAMD,UAAUD,GAChBE,IACHH,EAAUI,EAAYJ,EAASK,EAAWF,IAE5C,CAEA,OAAOH,CACR,CAEA,SAASK,EAAYF,GACpB,GAAmB,kBAARA,GAAmC,kBAARA,EACrC,OAAOA,EAGR,GAAmB,kBAARA,EACV,MAAO,GAGR,GAAIG,MAAMC,QAAQJ,GACjB,OAAO1B,EAAW+B,MAAM,KAAML,GAG/B,GAAIA,EAAIM,WAAaC,OAAOC,UAAUF,WAAaN,EAAIM,SAASA,WAAWG,SAAS,iBACnF,OAAOT,EAAIM,WAGZ,IAAIT,EAAU,GAEd,IAAK,IAAIa,KAAOV,EACXL,EAAOgB,KAAKX,EAAKU,IAAQV,EAAIU,KAChCb,EAAUI,EAAYJ,EAASa,IAIjC,OAAOb,CACR,CAEA,SAASI,EAAaW,EAAOC,GAC5B,OAAKA,EAIDD,EACIA,EAAQ,IAAMC,EAGfD,EAAQC,EAPPD,CAQT,CAEqCE,EAAOC,SAC3CzC,EAAW0C,QAAU1C,EACrBwC,EAAOC,QAAUzC,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CArEA","sources":["Application/Settings/Settings.tsx","webpack://jaze/./src/components/foundations/button/Button.module.css?d28d","components/foundations/button/Button.tsx","webpack://jaze/./src/components/structure/viewFrame/ViewFrame.module.css?eab7","webpack://jaze/./src/components/structure/viewSection/ViewSection.module.css?a8a6","components/structure/viewSection/ViewSection.tsx","components/structure/viewFrame/ViewFrame.tsx","components/views/displayGrid/DisplayGrid.tsx","webpack://jaze/./src/components/views/displayTable/DisplayTable.module.css?a90e","components/views/displayTable/DisplayTable.tsx","../node_modules/classnames/index.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faKey,\n  faPalette,\n  faPenNib,\n  faCoffee,\n  faBug,\n  faTools,\n  faCompactDisc,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { lastAuth } from \"../../hooks/authentication/lastAuth\";\nimport { spotAuth } from \"../../hooks/authentication/spotAuth\";\nimport { ActivityConstructorProps } from \"../../types/structureTypes\";\nimport DisplayTable from \"../../components/views/displayTable/DisplayTable\";\nimport Button from \"../../components/foundations/button/Button\";\nimport DisplayGrid from \"../../components/views/displayGrid/DisplayGrid\";\nimport { useViewTitle } from \"../../contexts/ViewTitleContexts\";\nimport {\n  setDecryptionMode,\n  decryptionMode,\n} from \"../../hooks/utils/useLocalStorage\";\nimport { reloadPage } from \"../../hooks/security/urlHandler\";\n\nconst Settings: React.FC<ActivityConstructorProps> = ({ userID }) => {\n  const { setTitle } = useViewTitle();\n  const { startAuthSpotify, isSpotifyLoggedIn, logSpotifyOut } = spotAuth();\n  const { startAuthFM, isFMAuthenticated, logFMOut } = lastAuth();\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.classList.toggle(\"dark-mode\");\n  };\n  useEffect(() => {\n    setTitle(\"Settings\");\n  }, [setTitle]);\n  const toggleGlobalIsDecryptMode = () => {\n    setDecryptionMode();\n    if (decryptionMode()) {\n      alert(\"Encryption enabled\");\n    } else {\n      alert(\"Encryption disabled\");\n    }\n    reloadPage();\n  };\n  const firstNode = useMemo(\n    () => [\n      {\n        displayLabel: \"Last.FM Account\",\n        action: isFMAuthenticated() ? logFMOut : startAuthFM,\n        actionLabel: !isFMAuthenticated() ? \"Log In\" : \"Log Out\",\n        icon: faUser,\n        disabled: false,\n      },\n      {\n        displayLabel: \"Spotify Account\",\n        action: isSpotifyLoggedIn() ? logSpotifyOut : startAuthSpotify,\n        actionLabel: !isSpotifyLoggedIn() ? \"Log In\" : \"Log Out\",\n        icon: faCompactDisc,\n      },\n      {\n        displayLabel: \"Store Data Securely\",\n        action: toggleGlobalIsDecryptMode,\n        actionLabel: !decryptionMode() ? \"Encrypt Data\" : \"Decrypt Data\",\n        icon: faKey,\n        disabled: false,\n      },\n      {\n        displayLabel: \"Current Theme Mode\",\n        action: toggleDarkMode,\n        actionLabel: isDarkMode ? \"Light Mode\" : \"Dark Mode\",\n        icon: faPalette,\n        disabled: false,\n      },\n    ],\n    [isFMAuthenticated, startAuthFM],\n  );\n  const settingsTableData = firstNode.map((option) => [\n    <FontAwesomeIcon\n      key={`${option.displayLabel}-icon`}\n      icon={option.icon}\n      aria-hidden=\"true\"\n    />,\n    option.displayLabel,\n    <Button\n      key={`${option.displayLabel}-button`}\n      onClick={option.action}\n      disabled={option.disabled}\n    >\n      {option.actionLabel}\n    </Button>,\n  ]);\n\n  const secondNode = [\n    [<FontAwesomeIcon icon={faPenNib} />, \"Author Name\", \"J Kang\"],\n    [\n      <FontAwesomeIcon icon={faCoffee} />,\n      \"Current Version\",\n      \"JaZe \" + process.env.REACT_APP_VER,\n    ],\n    [\n      <FontAwesomeIcon icon={faBug} />,\n      \"Report A Bug\",\n      <Button\n        onClick={() =>\n          window.open(\"mailto:admin@jklmnopea.com?subject=Bug Report\")\n        }\n      >\n        Report\n      </Button>,\n    ],\n    [\n      <FontAwesomeIcon icon={faTools} />,\n      \"Make Contributions\",\n      <Button\n        onClick={() =>\n          (window.location.href = \"https://github.com/jaykang98/jaze\")\n        }\n      >\n        Launch GitHub\n      </Button>,\n    ],\n    [\n      <FontAwesomeIcon icon={faCoffee} />,\n      \"Support Open Source Software\",\n      <Button\n        onClick={() =>\n          (window.location.href =\n            \"https://paypal.me/jklmnopea?country.x=US&locale.x=en_US\")\n        }\n      >\n        $ Donate\n      </Button>,\n    ],\n  ];\n\n  return (\n    <DisplayGrid\n      title=\"Settings\"\n      userID={userID}\n      viewFrames={[\n        {\n          content: (\n            <>\n              <p>\n                Adjust your preferences for a personalized experience. JaZe\n                offers a number of customization options, including Last.FM\n                login, disabling local encryption (faster, but less secure),\n                clearing all saved information, and dark mode. Enjoy!\n              </p>\n              <ul>\n                <li>\n                  Use the Last.FM Authentication Framework to view data about\n                  your music\n                </li>\n                <li>\n                  Store some of the data locally and securely to save on query\n                  requests\n                </li>\n                <li>\n                  View your top ten musicians, albums, and tracks of all time.\n                  AND the number of scrobbles!\n                </li>\n                <li>Create a Last.FM account from the click of a button</li>\n                <li>\n                  Enable DEBUG_MODE to view more information and disable\n                  encryption\n                </li>\n                <li>Quick links for quick actions!</li>\n              </ul>\n            </>\n          ),\n          viewWidth: 100,\n        },\n        {\n          content: (\n            <>\n              <h3>Customize JaZe</h3>\n              <DisplayTable data={settingsTableData} />\n              <DisplayTable data={secondNode} />\n            </>\n          ),\n          viewWidth: 100,\n        },\n      ]}\n    />\n  );\n};\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__RlBKX\",\"gradientLoop\":\"Button_gradientLoop__gZwKe\"};","// Filename: Button.tsx\nimport React, { forwardRef } from \"react\";\nimport styles from \"./Button.module.css\";\nimport { ButtonProps } from \"../../../types/foundationTypes\";\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      onClick,\n      children,\n      type = \"button\",\n      className,\n      disabled = false,\n      dataType,\n    },\n    ref,\n  ) => {\n    return (\n      <button\n        ref={ref}\n        type={type}\n        className={`${styles.button} ${className || \"\"} ${disabled ? styles.disabled : \"\"}`}\n        onClick={onClick}\n        disabled={disabled}\n        datatype={dataType}\n      >\n        {children}\n      </button>\n    );\n  },\n);\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"viewFrame\":\"ViewFrame_viewFrame__ZU2oo\",\"empty\":\"ViewFrame_empty__6Vyig\"};","// extracted by mini-css-extract-plugin\nexport default {\"viewSection\":\"ViewSection_viewSection__lYpQo\"};","import React from \"react\";\nimport styles from \"./ViewSection.module.css\";\nimport { ViewSectionProps } from \"types/structureTypes\";\n\nconst ViewSection: React.FC<ViewSectionProps> = ({ children, style }) => {\n  const isEmptyContent = React.Children.count(children) === 0;\n  const sectionClassName = isEmptyContent\n    ? styles.viewSectionEmpty\n    : styles.viewSection;\n\n  return (\n    <div className={sectionClassName} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default ViewSection;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"src/components/structure/viewFrame/ViewFrame.module.css\";\nimport ViewSection from \"../viewSection/ViewSection\";\nimport { ViewFrameProps } from \"types/structureTypes\";\n\nconst isEmptyContent = (children: React.ReactNode): boolean => {\n  const childrenArray = React.Children.toArray(children);\n  return (\n    childrenArray.length === 0 ||\n    childrenArray.every(\n      (child) =>\n        React.isValidElement(child) &&\n        child.type === React.Fragment &&\n        React.Children.count(child.props.children) === 0,\n    )\n  );\n};\n\nconst ViewFrame: React.FC<ViewFrameProps> = ({\n  children,\n  splitPercentage = 100,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [adjustedSplit, setAdjustedSplit] = useState(splitPercentage);\n  const [firstChild, secondChild] = React.Children.toArray(children).slice(\n    0,\n    2,\n  );\n  const isContentEmpty = isEmptyContent([firstChild, secondChild]);\n\n  const adjustSplitPercentage = () => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const minChildWidth = 0;\n      const maxChildWidth = 1800;\n      let newSplit =\n        (Math.max(\n          minChildWidth,\n          Math.min(maxChildWidth, containerWidth * (splitPercentage / 100)),\n        ) /\n          containerWidth) *\n        100;\n      setAdjustedSplit(newSplit);\n    }\n  };\n\n  useEffect(() => {\n    adjustSplitPercentage();\n    window.addEventListener(\"resize\", adjustSplitPercentage);\n    return () => window.removeEventListener(\"resize\", adjustSplitPercentage);\n  }, [splitPercentage]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={classNames(styles.viewFrame, {\n        [styles.empty]: isContentEmpty,\n      })}\n    >\n      <ViewSection style={{ width: `${adjustedSplit}%` }}>\n        {firstChild}\n      </ViewSection>\n      <ViewSection style={{ width: `${100 - adjustedSplit}%` }}>\n        {secondChild}\n      </ViewSection>\n    </div>\n  );\n};\n\nexport default ViewFrame;\n","import React from \"react\";\nimport ViewFrame from \"../../structure/viewFrame/ViewFrame\";\nimport { ActivityConstructorProps } from \"types/structureTypes\";\nimport Styles from \"components/views/displayGrid/DisplayGrid.module.css\";\ninterface ViewFrameInfo {\n  content: React.ReactNode;\n  viewWidth?: number;\n}\n\ninterface DisplayGridProps extends ActivityConstructorProps {\n  title?: string;\n  viewFrames: ViewFrameInfo[];\n}\n\nconst DisplayGrid: React.FC<DisplayGridProps> = ({ viewFrames }) => {\n  const totalSpecifiedWidth = viewFrames.reduce(\n    (acc, { viewWidth }) => acc + (viewWidth || 0),\n    0,\n  );\n  const unspecifiedFramesCount = viewFrames.filter(\n    ({ viewWidth }) => viewWidth === undefined,\n  ).length;\n  const remainingWidthPerFrame =\n    (100 - totalSpecifiedWidth) / unspecifiedFramesCount;\n\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"row\" }}>\n        {viewFrames.map((frame, index) => (\n          <ViewFrame\n            key={index}\n            splitPercentage={frame.viewWidth || remainingWidthPerFrame}\n          >\n            {frame.content}\n          </ViewFrame>\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default DisplayGrid;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DisplayTable_table__PCu12\",\"cell\":\"DisplayTable_cell__oHF8z\"};","// File: DisplayTable.tsx\nimport React from \"react\";\nimport styles from \"./DisplayTable.module.css\";\n\ntype TableCell = string | JSX.Element;\n\ninterface TableProps {\n  data: TableCell[][];\n}\n\nconst DisplayTable: React.FC<TableProps> = ({ data }) => {\n  if (data.length === 0 || (data.length > 0 && data[0].length === 0)) {\n    return <div>No data available</div>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {data.map((row, rowIndex) => (\n          <tr key={`row-${rowIndex}`}>\n            {row.map((cell, cellIndex) => (\n              <td\n                key={`cell-${rowIndex}-${cellIndex}`}\n                className={`${styles.cell} ${cellIndex === 0 ? styles.boldText : \"\"}`}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DisplayTable;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["_ref","userID","setTitle","useViewTitle","startAuthSpotify","isSpotifyLoggedIn","logSpotifyOut","spotAuth","startAuthFM","isFMAuthenticated","logFMOut","lastAuth","isDarkMode","setIsDarkMode","useState","toggleDarkMode","document","body","classList","toggle","useEffect","toggleGlobalIsDecryptMode","setDecryptionMode","decryptionMode","alert","reloadPage","settingsTableData","useMemo","displayLabel","action","actionLabel","icon","faUser","disabled","faCompactDisc","faKey","faPalette","map","option","_jsx","FontAwesomeIcon","concat","Button","onClick","children","secondNode","faPenNib","faCoffee","faBug","window","open","faTools","location","href","DisplayGrid","title","viewFrames","content","_jsxs","_Fragment","viewWidth","DisplayTable","data","forwardRef","ref","type","className","dataType","styles","button","datatype","style","sectionClassName","React","count","viewSectionEmpty","viewSection","splitPercentage","containerRef","useRef","adjustedSplit","setAdjustedSplit","firstChild","secondChild","toArray","slice","isContentEmpty","childrenArray","length","every","child","props","isEmptyContent","adjustSplitPercentage","current","containerWidth","offsetWidth","minChildWidth","maxChildWidth","newSplit","Math","max","min","addEventListener","removeEventListener","classNames","ViewSection","width","remainingWidthPerFrame","reduce","acc","_ref2","filter","_ref3","undefined","display","flexDirection","frame","index","ViewFrame","table","row","rowIndex","cell","cellIndex","boldText","hasOwn","hasOwnProperty","classes","i","arguments","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default"],"sourceRoot":""}